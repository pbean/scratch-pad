name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          
          # Generate changelog
          if [ -n "$PREV_TAG" ]; then
            echo "## Changes since $PREV_TAG" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --pretty=format:"- %s (%h)" $PREV_TAG..HEAD >> CHANGELOG.md
          else
            echo "## Initial Release" > CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "First release of Scratch Pad - a quick note-taking application." >> CHANGELOG.md
          fi
          
          # Set output
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: 'Scratch Pad ${{ github.ref_name }}'
          body: |
            # Scratch Pad ${{ github.ref_name }}
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## Installation
            
            ### Windows
            - Download `scratch-pad_${{ github.ref_name }}_x64_en-US.msi` for MSI installer
            - Download `scratch-pad_${{ github.ref_name }}_x64-setup.exe` for NSIS installer
            
            ### macOS
            - Download `scratch-pad_${{ github.ref_name }}_universal.dmg` for Universal Binary (Intel + Apple Silicon)
            - Download `scratch-pad_${{ github.ref_name }}_x64.dmg` for Intel Macs
            - Download `scratch-pad_${{ github.ref_name }}_aarch64.dmg` for Apple Silicon Macs
            
            ### Linux
            - Download `scratch-pad_${{ github.ref_name }}_amd64.deb` for Debian/Ubuntu
            - Download `scratch-pad_${{ github.ref_name }}_amd64.AppImage` for AppImage
            
            ## Verification
            
            All binaries are signed and can be verified using the checksums provided.
          draft: false
          prerelease: false

  build-release:
    name: Build Release (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'x86_64-apple-darwin'
            arch: 'x64'
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            arch: 'aarch64'
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'universal-apple-darwin'
            arch: 'universal'
          - platform: 'ubuntu-22.04'
            os: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
            arch: 'amd64'
          - platform: 'windows-latest'
            os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            arch: 'x64'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          
          # Version-specific WebKit installation for Ubuntu compatibility
          if [ "$(lsb_release -rs)" = "24.04" ]; then
            sudo apt-get install -y libwebkit2gtk-4.1-dev
          else
            sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev
          fi
          
          # Common dependencies (platform-agnostic)
          sudo apt-get install -y \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            pkg-config

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0.5.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}
          args: --target ${{ matrix.target }}

  generate-checksums:
    name: Generate Checksums
    runs-on: ubuntu-latest
    needs: [create-release, build-release]
    steps:
      - name: Download release assets
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const { data: release } = await github.rest.repos.getRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }}
            });
            
            for (const asset of release.assets) {
              const response = await github.rest.repos.getReleaseAsset({
                owner: context.repo.owner,
                repo: context.repo.repo,
                asset_id: asset.id,
                headers: {
                  Accept: 'application/octet-stream'
                }
              });
              
              fs.writeFileSync(asset.name, Buffer.from(response.data));
            }

      - name: Generate checksums
        run: |
          sha256sum * > checksums.txt
          cat checksums.txt

      - name: Upload checksums
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          files: ./checksums.txt