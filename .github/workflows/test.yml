name: Cross-Platform Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  test-matrix:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20  # Reduce from 30 minutes for faster feedback
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        uses: ./.github/actions/install-linux-deps

      - name: Configure macOS resources
        if: matrix.os == 'macos-latest'
        shell: bash
        run: |
          # Increase file descriptor limit for macOS
          ulimit -n 10240
          # Show system resources
          sysctl hw.ncpu hw.memsize
          # Set conservative test environment for macOS
          echo "RUST_TEST_THREADS=1" >> $GITHUB_ENV

      - name: Run frontend tests only
        shell: bash
        run: |
          # Use CI-specific config for frontend tests
          echo "Running frontend tests with CI configuration"
          export NODE_OPTIONS="--max-old-space-size=4096"
          pnpm test --run --config vitest.ci.config.ts
        
      - name: Run TypeScript type check
        shell: bash
        run: |
          if [ "$GITHUB_ACTIONS" = "true" ]; then
            pnpm type-check:ci
          else
            pnpm type-check
          fi

      - name: Run frontend linting
        shell: bash
        run: pnpm lint

      - name: Build frontend
        shell: bash
        run: |
          if [ "$GITHUB_ACTIONS" = "true" ]; then
            pnpm build:ci || pnpm build
          else
            pnpm build:strict
          fi

      - name: Run backend tests
        working-directory: src-tauri
        shell: bash
        run: |
          echo "Running backend tests for ${{ matrix.os }}"
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            # Use single thread for macOS to avoid resource issues
            export RUST_TEST_THREADS=1
          fi
          cargo test --lib --release

      - name: Build backend
        shell: bash
        run: cd src-tauri && cargo build --release

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 25  # Reduce timeout for coverage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust
        with:
          components: 'llvm-tools-preview'

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Run frontend tests with coverage
        shell: bash
        run: |
          echo "Running frontend tests with coverage"
          export NODE_OPTIONS="--max-old-space-size=4096"
          pnpm test --run --coverage --config vitest.ci.config.ts

      - name: Run backend tests with coverage
        working-directory: src-tauri
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info,./src-tauri/lcov.info
          fail_ci_if_error: false