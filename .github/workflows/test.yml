name: Cross-Platform Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests daily at 6 AM UTC
    - cron: '0 6 * * *'

env:
  CARGO_TERM_COLOR: always

jobs:
  test-matrix:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30  # Increase from default 6 minutes
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        uses: ./.github/actions/install-linux-deps

      - name: Build frontend
        uses: ./.github/actions/build-frontend
        with:
          run-tests: 'true'
          run-type-check: 'true'
          run-lint: 'true'
          build-production: 'true'

      - name: Run tests with performance monitoring
        uses: ./.github/actions/run-tests
        with:
          run-frontend-tests: 'false'  # Already run in build-frontend
          run-backend-tests: 'true'
          run-integration-tests: 'true'
          performance-monitoring: 'true'
          platform: ${{ matrix.os }}
          test-timeout: '600'  # 10 minutes timeout for CI

      - name: Build test (no bundle)
        run: cd src-tauri && cargo build --release

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Increase timeout for coverage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust
        with:
          components: 'llvm-tools-preview'

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Build frontend with coverage
        uses: ./.github/actions/build-frontend
        with:
          run-tests: 'true'
          test-coverage: 'true'
          run-type-check: 'false'
          run-lint: 'false'
          build-production: 'false'

      - name: Run backend tests with coverage
        run: cd src-tauri && cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage/lcov.info,./src-tauri/lcov.info
          fail_ci_if_error: false