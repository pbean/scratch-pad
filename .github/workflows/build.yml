name: Build and Release

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust

      - name: Install Linux dependencies
        uses: ./.github/actions/install-linux-deps

      - name: Build and test frontend
        uses: ./.github/actions/build-frontend
        with:
          run-tests: 'true'
          run-type-check: 'true'
          run-lint: 'true'
          build-production: 'false'

      - name: Run backend and integration tests
        uses: ./.github/actions/run-tests
        with:
          run-frontend-tests: 'false'
          run-backend-tests: 'true'
          run-integration-tests: 'true'
          platform: 'ubuntu-22.04'

  build:
    name: Build (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'x86_64-apple-darwin'
            arch: 'x64'
            rust_target: 'x86_64-apple-darwin'
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            arch: 'arm64'
            rust_target: 'aarch64-apple-darwin'
          - platform: 'ubuntu-22.04'
            os: 'ubuntu-22.04'
            target: 'x86_64-unknown-linux-gnu'
            arch: 'x64'
            rust_target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            arch: 'x64'
            rust_target: 'x86_64-pc-windows-msvc'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust
        with:
          targets: ${{ matrix.rust_target }}

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-22.04'
        uses: ./.github/actions/install-linux-deps

      - name: Build frontend
        uses: ./.github/actions/build-frontend
        with:
          run-tests: 'false'
          run-type-check: 'false'
          run-lint: 'false'
          build-production: 'true'

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0.5.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Scratch Pad v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.rust_target }}

  build-universal-macos:
    name: Build Universal macOS
    runs-on: macos-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js and PNPM
        uses: ./.github/actions/setup-node-pnpm

      - name: Setup Rust toolchain
        uses: ./.github/actions/setup-rust
        with:
          targets: 'aarch64-apple-darwin x86_64-apple-darwin'

      - name: Build frontend
        uses: ./.github/actions/build-frontend
        with:
          run-tests: 'false'
          run-type-check: 'false'
          run-lint: 'false'
          build-production: 'true'

      - name: Build Universal macOS app
        uses: tauri-apps/tauri-action@v0.5.14
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Scratch Pad v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target universal-apple-darwin