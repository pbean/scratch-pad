name: Build and Release

on:
  push:
    branches: [main, develop]
    tags: ['v*']
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          
          # Version-specific WebKit installation for Ubuntu 24.04 compatibility
          if [ "$(lsb_release -rs)" = "24.04" ]; then
            sudo apt-get install -y libwebkit2gtk-4.1-dev
          else
            sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev
          fi
          
          # Common dependencies (platform-agnostic)
          sudo apt-get install -y \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            pkg-config

      - name: Install frontend dependencies
        run: pnpm install

      - name: Run frontend tests
        run: pnpm test --run

      - name: Run frontend type check
        run: pnpm type-check

      - name: Run frontend linting
        run: pnpm lint

      - name: Run backend tests
        run: cd src-tauri && cargo test

      - name: Run integration tests
        run: cd src-tauri && chmod +x test_integration.sh && ./test_integration.sh

  build:
    name: Build (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'x86_64-apple-darwin'
            arch: 'x64'
            rust_target: 'x86_64-apple-darwin'
          - platform: 'macos-latest'
            os: 'macos-latest'
            target: 'aarch64-apple-darwin'
            arch: 'arm64'
            rust_target: 'aarch64-apple-darwin'
          - platform: 'ubuntu-20.04'
            os: 'ubuntu-20.04'
            target: 'x86_64-unknown-linux-gnu'
            arch: 'x64'
            rust_target: 'x86_64-unknown-linux-gnu'
          - platform: 'windows-latest'
            os: 'windows-latest'
            target: 'x86_64-pc-windows-msvc'
            arch: 'x64'
            rust_target: 'x86_64-pc-windows-msvc'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.rust_target }}

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install Linux dependencies
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          
          # Version-specific WebKit installation for Ubuntu compatibility
          if [ "$(lsb_release -rs)" = "24.04" ]; then
            sudo apt-get install -y libwebkit2gtk-4.1-dev
          else
            sudo apt-get install -y libwebkit2gtk-4.0-dev libwebkit2gtk-4.1-dev
          fi
          
          # Common dependencies (platform-agnostic)
          sudo apt-get install -y \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libssl-dev \
            pkg-config

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - name: Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Scratch Pad v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.rust_target }}

  build-universal-macos:
    name: Build Universal macOS
    runs-on: macos-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: 'aarch64-apple-darwin,x86_64-apple-darwin'

      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: src-tauri

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build frontend
        run: pnpm build

      - name: Build Universal macOS app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: 'Scratch Pad v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: --target universal-apple-darwin